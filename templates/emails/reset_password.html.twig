{% extends 'base.html.twig' %}
{% block title %}Réinitialisation du mot de passe{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        .background-overlay {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: 100vw;
            background: url('{{ asset("img/ksks.png") }}') no-repeat center center fixed;
            background-size: cover;
            opacity: 0.3;
            z-index: 0;
            pointer-events: none;
        }
        
        .container {
            position: relative;
            z-index: 2;
        }

        .card {
            background: rgba(255, 255, 255, 0.96);
            border-radius: 20px;
            box-shadow: 0 12px 40px rgba(0,0,0,0.2);
            overflow: hidden;
            backdrop-filter: blur(8px);
            border: 1px solid rgba(255,255,255,0.3);
            max-width: 600px;
            margin: 2rem auto;
        }

        .form-control {
            border-radius: 12px;
            padding: 1rem;
            border: 2px solid #e9ecef;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 4px rgba(13, 110, 253, 0.25);
        }

        .invalid-feedback {
            display: none;
            color: #dc3545;
            font-size: 0.875em;
        }

        .is-invalid ~ .invalid-feedback {
            display: block;
        }
    </style>
{% endblock %}

{% block body %}
<div class="background-overlay"></div>

<div class="container py-5">
    <div class="card p-4 p-lg-5">
        <div class="text-center mb-4">
            <img src="{{ asset('img/logoOur.png') }}" alt="Logo" class="mb-3" style="height: 60px;">
            <h2 class="mb-3 fw-bold">Réinitialisation du mot de passe</h2>
        </div>

        <div id="step1">
            <p>Entrez votre adresse email pour recevoir un code de confirmation :</p>
            <div class="mb-3">
                <input type="email" id="resetEmail" class="form-control" placeholder="Votre email">
                <div class="invalid-feedback" id="emailError"></div>
            </div>
            <button id="resetNextBtn" class="btn btn-primary w-100">Suivant</button>
        </div>
        
        <div id="step2" style="display: none;">
            <p>Un code a été envoyé à <span id="emailDisplay" class="fw-bold"></span>. Entrez-le ci-dessous :</p>
            <div class="mb-3">
                <input type="text" id="resetCode" class="form-control" placeholder="Code à 6 chiffres" maxlength="6">
                <div class="invalid-feedback" id="codeError"></div>
            </div>
            <div class="text-end mb-3">
                <a href="#" id="resendCodeLink" class="small">Renvoyer le code</a>
                <span id="resendCounter" class="small text-muted ms-2"></span>
            </div>
            <button id="verifyCodeBtn" class="btn btn-primary w-100">Vérifier le code</button>
        </div>
        
        <div id="step3" style="display: none;">
            <p>Entrez votre nouveau mot de passe :</p>
            <div class="mb-3">
                <input type="password" id="newPassword" class="form-control" placeholder="Nouveau mot de passe" minlength="6">
                <div class="invalid-feedback" id="passwordError"></div>
            </div>
            <div class="mb-3">
                <input type="password" id="confirmPassword" class="form-control" placeholder="Confirmez le mot de passe" minlength="6">
                <div class="invalid-feedback" id="confirmPasswordError"></div>
            </div>
            <button id="resetSubmitBtn" class="btn btn-primary w-100">Mettre à jour</button>
        </div>

        <div class="text-center mt-4">
            <a href="{{ path('app_login') }}" class="text-decoration-none">
                <i class="bi bi-arrow-left"></i> Retour à la connexion
            </a>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            let currentStep = 1;
            let userEmail = '';

            // Étape 1: Demande de réinitialisation
            document.getElementById('resetNextBtn').addEventListener('click', async function() {
                const email = document.getElementById('resetEmail').value;
                if (!email || !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                    document.getElementById('emailError').textContent = 'Veuillez entrer une adresse email valide';
                    document.getElementById('resetEmail').classList.add('is-invalid');
                    return;
                }
                
                try {
                    const response = await fetch('{{ path("app_reset_password_request") }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: `email=${encodeURIComponent(email)}`
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        userEmail = email;
                        document.getElementById('emailDisplay').textContent = email;
                        document.getElementById('step1').style.display = 'none';
                        document.getElementById('step2').style.display = 'block';
                        currentStep = 2;
                        startResendTimer();
                    } else {
                        document.getElementById('emailError').textContent = data.message || 'Erreur lors de la demande';
                        document.getElementById('resetEmail').classList.add('is-invalid');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire('Erreur', 'Une erreur est survenue. Veuillez réessayer.', 'error');
                }
            });

            // Étape 2: Vérification du code
            document.getElementById('verifyCodeBtn').addEventListener('click', async function() {
                const code = document.getElementById('resetCode').value;
                if (!code || code.length !== 6) {
                    document.getElementById('codeError').textContent = 'Le code doit contenir 6 chiffres';
                    document.getElementById('resetCode').classList.add('is-invalid');
                    return;
                }
                
                try {
                    const response = await fetch('{{ path("app_reset_password_verify") }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: `email=${encodeURIComponent(userEmail)}&code=${encodeURIComponent(code)}`
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        document.getElementById('step2').style.display = 'none';
                        document.getElementById('step3').style.display = 'block';
                        currentStep = 3;
                    } else {
                        document.getElementById('codeError').textContent = data.message || 'Code incorrect';
                        document.getElementById('resetCode').classList.add('is-invalid');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire('Erreur', 'Une erreur est survenue. Veuillez réessayer.', 'error');
                }
            });

            // Étape 3: Mise à jour du mot de passe
            document.getElementById('resetSubmitBtn').addEventListener('click', async function() {
                const newPassword = document.getElementById('newPassword').value;
                const confirmPassword = document.getElementById('confirmPassword').value;
                const code = document.getElementById('resetCode').value;
                
                if (newPassword.length < 6) {
                    document.getElementById('passwordError').textContent = 'Le mot de passe doit contenir au moins 6 caractères';
                    document.getElementById('newPassword').classList.add('is-invalid');
                    return;
                }
                
                if (newPassword !== confirmPassword) {
                    document.getElementById('confirmPasswordError').textContent = 'Les mots de passe ne correspondent pas';
                    document.getElementById('confirmPassword').classList.add('is-invalid');
                    return;
                }
                
                try {
                    const response = await fetch('{{ path("app_reset_password_update") }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: `email=${encodeURIComponent(userEmail)}&code=${encodeURIComponent(code)}&newPassword=${encodeURIComponent(newPassword)}`
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Mot de passe mis à jour',
                            text: 'Vous pouvez maintenant vous connecter avec votre nouveau mot de passe.',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.href = '{{ path('app_login') }}';
                        });
                    } else {
                        Swal.fire('Erreur', data.message || 'Erreur lors de la mise à jour du mot de passe', 'error');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire('Erreur', 'Une erreur est survenue. Veuillez réessayer.', 'error');
                }
            });

            // Gestion du renvoi de code
            document.getElementById('resendCodeLink').addEventListener('click', async function(e) {
                e.preventDefault();
                
                try {
                    const response = await fetch('{{ path("app_reset_password_resend") }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: `email=${encodeURIComponent(userEmail)}`
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        Swal.fire('Succès', 'Un nouveau code a été envoyé à votre adresse email.', 'success');
                        startResendTimer();
                    } else {
                        Swal.fire('Erreur', data.message || 'Impossible de renvoyer le code', 'error');
                        document.getElementById('resendCodeLink').style.display = 'none';
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire('Erreur', 'Une erreur est survenue. Veuillez réessayer.', 'error');
                }
            });

            // Timer pour le renvoi de code
            function startResendTimer() {
                let counter = 60;
                const resendLink = document.getElementById('resendCodeLink');
                const counterElement = document.getElementById('resendCounter');
                
                resendLink.style.display = 'none';
                counterElement.textContent = `(Vous pourrez renvoyer le code dans ${counter} secondes)`;
                
                const timer = setInterval(() => {
                    counter--;
                    counterElement.textContent = `(Vous pourrez renvoyer le code dans ${counter} secondes)`;
                    
                    if (counter <= 0) {
                        clearInterval(timer);
                        resendLink.style.display = 'inline';
                        counterElement.textContent = '';
                    }
                }, 1000);
            }
        });
    </script>
{% endblock %}