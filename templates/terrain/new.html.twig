{% extends 'base_backOffice.html.twig' %}

{% block title %}Nouveau Terrain{% endblock %}

{% block stylesheets %}
  {{ parent() }}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <!-- Add Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""/>
  <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
  <style>
    .card {
      border-radius: 12px;
      box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.14), 
                  0 7px 10px -5px rgba(0, 0, 0, 0.4);
    }
    .form-group {
      margin-bottom: 1.5rem;
    }
    .form-control {
      border-radius: 8px;
      padding: 10px 15px;
      border: 1px solid #d2d6da;
      transition: all 0.3s;
    }
    .form-control:focus {
      border-color: #A78B6D;
      box-shadow: 0 0 0 2px rgba(167, 139, 109, 0.1);
    }
    .form-text {
      font-size: 0.8rem;
      color: #6c757d;
      margin-top: 0.25rem;
    }
    .btn-action-group {
      display: flex;
      gap: 10px;
      margin-top: 20px;
    }
    .input-group-text {
      background-color: #f8f9fa;
      border: 1px solid #d2d6da;
    }
    .bg-gradient-brown {
      background: linear-gradient(195deg, #A78B6D 0%, #8B7355 100%);
    }
    .shadow-brown {
      box-shadow: 0 4px 20px 0 rgba(167, 139, 109, 0.14), 
                  0 7px 10px -5px rgba(167, 139, 109, 0.4);
    }
    .btn-brown {
      background-color: #A78B6D;
      color: white;
      border: none;
    }
    .btn-brown:hover {
      background-color: #8B7355;
      color: white;
    }
    
    /* Error styling */
    .is-invalid {
      border-color: #dc3545;
    }
    .is-invalid:focus {
      border-color: #dc3545;
      box-shadow: 0 0 0 0.25rem rgba(220,53,69,.25);
    }
    .form-error-message {
      color: #dc3545;
      font-size: 0.875rem;
      margin-top: 0.25rem;
      display: block;
    }
    .form-error-icon {
      color: #dc3545;
      margin-right: 0.25rem;
    }
    
    /* Map styles */
    #map {
      height: 300px;
      border-radius: 12px;
      margin-bottom: 15px;
      border: 2px solid #dee2e6;
    }
    
    .map-controls {
      display: flex;
      gap: 10px;
      margin-bottom: 15px;
    }
    
    .map-controls button {
      flex: 1;
      padding: 8px 12px;
      border-radius: 8px;
      border: none;
      background: #f8f9fa;
      cursor: pointer;
      transition: all 0.2s;
      font-size: 14px;
    }
    
    .map-controls button:hover {
      background: #e9ecef;
    }
    
    .map-controls button i {
      margin-right: 5px;
    }
    
    .location-selector-btn {
      margin-bottom: 15px;
    }
  </style>
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <!-- Add Leaflet JS -->
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""></script>
  <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Map elements
      const map = L.map('map').setView([36.8, 10.18], 12); // Default to Tunisia coordinates
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
      }).addTo(map);
      
      // Add geocoder control
      const geocoder = L.Control.geocoder({
        defaultMarkGeocode: false,
        position: 'topright'
      }).addTo(map);
      
      geocoder.on('markgeocode', function(e) {
        const latlng = e.geocode.center;
        updateMarkerPosition(latlng);
        updateFormFields(latlng.lat, latlng.lng, e.geocode.name);
      });
      
      // Form elements
      const emplacementInput = document.getElementById('{{ form.emplacement.vars.id }}');
      const detailsgeoInput = document.getElementById('{{ form.detailsgeo.vars.id }}');
      
      // Marker
      const marker = L.marker([36.8, 10.18], { draggable: true }).addTo(map);
      
      // Update marker position and form fields when marker is dragged
      marker.on('dragend', function(e) {
        const latlng = marker.getLatLng();
        updateFormFields(latlng.lat, latlng.lng);
      });
      
      // Update fields when map is clicked
      map.on('click', function(e) {
        updateMarkerPosition(e.latlng);
        updateFormFields(e.latlng.lat, e.latlng.lng);
      });
      
      // Locate me button
      document.getElementById('locate-me').addEventListener('click', function() {
        map.locate({setView: true, maxZoom: 16});
      });
      
      map.on('locationfound', function(e) {
        updateMarkerPosition(e.latlng);
        updateFormFields(e.latlng.lat, e.latlng.lng);
      });
      
      // Helper functions
      function updateMarkerPosition(latlng) {
        marker.setLatLng(latlng);
        map.setView(latlng, map.getZoom());
      }
      
      function updateFormFields(lat, lng, address = null) {
        if (!address) {
          // Reverse geocode to get address
          fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`)
            .then(response => response.json())
            .then(data => {
              emplacementInput.value = data.display_name || 'Emplacement sélectionné';
              detailsgeoInput.value = `Lat: ${lat.toFixed(6)}, Lng: ${lng.toFixed(6)}`;
              
              // Add validation classes
              emplacementInput.classList.remove('is-invalid');
              emplacementInput.classList.add('is-valid');
              detailsgeoInput.classList.remove('is-invalid');
              detailsgeoInput.classList.add('is-valid');
            })
            .catch(error => {
              console.error('Geocoding error:', error);
              emplacementInput.value = 'Emplacement sélectionné';
              detailsgeoInput.value = `Lat: ${lat.toFixed(6)}, Lng: ${lng.toFixed(6)}`;
            });
        } else {
          emplacementInput.value = address;
          detailsgeoInput.value = `Lat: ${lat.toFixed(6)}, Lng: ${lng.toFixed(6)}`;
        }
      }
      
      // Initialize with current marker position
      updateFormFields(marker.getLatLng().lat, marker.getLatLng().lng);
    });
  </script>
{% endblock %}

{% block body %}
<div class="container-fluid py-4">
  <div class="row">
    <div class="col-12">
      <div class="card my-4">
        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
          <div class="bg-gradient-brown shadow-brown border-radius-lg pt-4 pb-3">
            <h6 class="text-white text-capitalize ps-3">
              <i class="material-symbols-rounded me-2">add_circle</i>
              Créer un nouveau Terrain
            </h6>
          </div>
        </div>
        <div class="card-body px-4 pb-2">
          {% for message in app.flashes('success') %}
            <div class="alert alert-success alert-dismissible fade show">
              <i class="material-symbols-rounded me-2">check_circle</i>
              {{ message }}
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          {% endfor %}

          {% for message in app.flashes('error') %}
            <div class="alert alert-danger alert-dismissible fade show">
              <i class="material-symbols-rounded me-2">error</i>
              {{ message }}
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          {% endfor %}

          {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

            <div class="row">
              <div class="col-12">
                <label class="form-label">Localisation du terrain</label>
                <div id="map"></div>
                <div class="map-controls">
                  <button type="button" id="locate-me" class="btn btn-sm btn-brown">
                    <i class="fas fa-location-arrow"></i> Ma position
                  </button>
                  <button type="button" id="search-place" class="btn btn-sm btn-brown">
                    <i class="fas fa-search"></i> Rechercher une adresse
                  </button>
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-md-6">
                <div class="form-group">
                  {{ form_label(form.emplacement) }}
                  {{ form_widget(form.emplacement, {
                    'attr': {
                      'class': 'form-control' ~ (form.emplacement.vars.errors|length ? ' is-invalid' : ''),
                      'placeholder': 'Ex: Quartier résidentiel, Sousse',
                      'required': 'required',
                      'readonly': 'readonly'
                    }
                  }) }}
                  {% if form.emplacement.vars.errors|length %}
                    <div class="form-error-message">
                      <i class="fas fa-exclamation-circle form-error-icon"></i>
                      {{ form_errors(form.emplacement) }}
                    </div>
                  {% endif %}
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  {{ form_label(form.superficie) }}
                  <div class="input-group">
                    {{ form_widget(form.superficie, {
                      'attr': {
                        'class': 'form-control' ~ (form.superficie.vars.errors|length ? ' is-invalid' : ''),
                        'placeholder': 'Ex: 500',
                        'required': 'required'
                      }
                    }) }}
                    <span class="input-group-text">m²</span>
                  </div>
                  {% if form.superficie.vars.errors|length %}
                    <div class="form-error-message">
                      <i class="fas fa-exclamation-circle form-error-icon"></i>
                      {{ form_errors(form.superficie) }}
                    </div>
                  {% endif %}
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-md-6">
                <div class="form-group">
                  {{ form_label(form.caracteristiques) }}
                  {{ form_widget(form.caracteristiques, {
                    'attr': {
                      'class': 'form-control' ~ (form.caracteristiques.vars.errors|length ? ' is-invalid' : ''),
                      'placeholder': 'Ex: Terrain plat avec vue mer',
                      'required': 'required'
                    }
                  }) }}
                  {% if form.caracteristiques.vars.errors|length %}
                    <div class="form-error-message">
                      <i class="fas fa-exclamation-circle form-error-icon"></i>
                      {{ form_errors(form.caracteristiques) }}
                    </div>
                  {% endif %}
                </div>
              </div>
              <div class="col-md-6">
                <div class="form-group">
                  {{ form_label(form.detailsgeo) }}
                  {{ form_widget(form.detailsgeo, {
                    'attr': {
                      'class': 'form-control' ~ (form.detailsgeo.vars.errors|length ? ' is-invalid' : ''),
                      'placeholder': 'Ex: Coordonnées GPS, pente, orientation',
                      'readonly': 'readonly'
                    }
                  }) }}
                  {% if form.detailsgeo.vars.errors|length %}
                    <div class="form-error-message">
                      <i class="fas fa-exclamation-circle form-error-icon"></i>
                      {{ form_errors(form.detailsgeo) }}
                    </div>
                  {% endif %}
                </div>
              </div>
            </div>

            <div class="btn-action-group">
              <button type="submit" class="btn btn-brown">
                <i class="material-symbols-rounded me-1">save</i>
                Enregistrer
              </button>
              <a href="{{ path('app_terrain_index') }}" class="btn btn-outline-secondary">
                <i class="material-symbols-rounded me-1">arrow_back</i>
                Retour à la liste
              </a>
            </div>

          {{ form_end(form) }}
        </div>
      </div>
    </div>
  </div>
</div>
{% endblock %}