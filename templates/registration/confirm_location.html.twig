{% extends 'base.html.twig' %}

{% block title %}Confirmez votre localisation{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <style>
        #map { height: 400px; }
        .search-box {
            position: absolute;
            top: 10px;
            left: 10px;
            z-index: 1000;
            width: 300px;
        }
        .search-box input {
            width: 100%;
            padding: 10px;
            border-radius: 4px;
            border: 1px solid #ddd;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Confirmez votre localisation</h4>
                </div>
                <div class="card-body">
                    <form method="post">
                        <div class="mb-4">
                            <div id="map-container" class="position-relative">
                                <div class="search-box">
                                    <input type="text" id="address-search" placeholder="Rechercher une adresse..." class="form-control">
                                </div>
                                <div id="map"></div>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="adresse" class="form-label">Adresse confirmée</label>
                            <input type="text" id="adresse" name="adresse" class="form-control" value="{{ user.adresse }}" readonly>
                        </div>
                        
                        <input type="hidden" id="latitude" name="latitude" value="">
                        <input type="hidden" id="longitude" name="longitude" value="">
                        
                        <button type="submit" class="btn btn-primary w-100 mt-3">
                            Confirmer et terminer
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const map = L.map('map').setView([48.8566, 2.3522], 13);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; OpenStreetMap'
            }).addTo(map);
            
            let marker;
            
            // Géolocalisation de l'utilisateur
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    const { latitude, longitude } = position.coords;
                    map.setView([latitude, longitude], 15);
                    updatePosition(latitude, longitude);
                });
            }
            
            // Gestion du clic sur la carte
            map.on('click', function(e) {
                updatePosition(e.latlng.lat, e.latlng.lng);
            });
            
            // Recherche d'adresse
            document.getElementById('address-search').addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    searchAddress(this.value);
                }
            });
            
            function updatePosition(lat, lng) {
                // Mise à jour du marqueur
                if (marker) map.removeLayer(marker);
                marker = L.marker([lat, lng]).addTo(map);
                
                // Mise à jour des champs cachés
                document.getElementById('latitude').value = lat;
                document.getElementById('longitude').value = lng;
                
                // Reverse geocoding pour obtenir l'adresse
                fetch(`/reverse-geocode?lat=${lat}&lng=${lng}`)
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('adresse').value = data.address;
                    });
            }
            
            function searchAddress(query) {
                fetch(`/search-address?q=${encodeURIComponent(query)}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.length > 0) {
                            const { lat, lon } = data[0];
                            map.setView([lat, lon], 15);
                            updatePosition(lat, lon);
                        }
                    });
            }
        });
    </script>
{% endblock %}