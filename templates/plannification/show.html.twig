{% extends 'base.html.twig' %}

{% block title %}Plannification{% endblock %}

{% block body %}
    <h1>Plannification</h1>

    <table class="table">
        <tbody>
        <tr>
            <th>Id</th>
            <td>{{ plannification.idPlannification }}</td>
        </tr>
        <tr>
            <th>Priorité</th>
            <td>{{ plannification.priorite }}</td>
        </tr>
        <tr>
            <th>Date planifiée</th>
            <td>{{ plannification.datePlanifiee|date('Y-m-d') }}</td>
        </tr>
        <tr>
            <th>Heure début</th>
            <td>{{ plannification.heureDebut ? plannification.heureDebut|date('H:i') : '' }}</td>
        </tr>
        <tr>
            <th>Heure fin</th>
            <td>{{ plannification.heureFin ? plannification.heureFin|date('H:i') : '' }}</td>
        </tr>
        <tr>
            <th>Remarques</th>
            <td>{{ plannification.remarques }}</td>
        </tr>
        <tr>
            <th>Statut</th>
            <td>{{ plannification.statut }}</td>
        </tr>
        <tr>
            <th>Tâche associée</th>
            <td>{{ plannification.idTache.description }}</td>
        </tr>
        </tbody>
    </table>

    <a href="{{ path('app_plannification_index') }}">Retour à la liste</a>
    <a href="{{ path('app_plannification_edit', {'idPlannification': plannification.idPlannification}) }}">Modifier</a>
    {{ include('plannification/_delete_form.html.twig') }}

    {# ✅ Bootstrap 5 Modal Trigger #}
    <button type="button" class="btn btn-primary mt-4" data-bs-toggle="modal" data-bs-target="#contactModal">
        Contact Assigner
    </button>

    {# ✅ Modal Bootstrap 5 #}
    <div class="modal fade" id="contactModal" tabindex="-1" aria-labelledby="contactModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="contactModalLabel">
                        Discussion with {{ plannification.idTache.artisan.artisan.nom }}
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="discussion-container" style="max-height: 400px; overflow-y: auto;">
                        {% for message in messages %}
                            <div class="card mb-2 {% if app.user == message.sender %}ms-auto bg-primary text-white{% else %}me-auto bg-light{% endif %}" style="max-width: 80%;">
                                <div class="card-body p-2">
                                    <p class="card-text mb-0">{{ message.content }}</p>
                                    <small class="text-muted">{{ message.createdAt|date('d/m/Y H:i') }}</small>
                                </div>
                            </div>
                        {% else %}
                            <p class="text-muted text-center">No messages yet. Start the conversation!</p>
                        {% endfor %}
                    </div>

                    {{ form_start(form, {
                        'attr': {
                            'class': 'mt-3',
                            'name': 'discussion'
                        }
                    }) }}
                    <div class="input-group">
                        {{ form_widget(form.content, {'attr': {'class': 'form-control'}}) }}
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-send"></i>
                        </button>
                    </div>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const discussionContainer = document.querySelector('.discussion-container');
            const form = document.querySelector('form[name="discussion"]');

            let lastMessageId = {{ messages|length > 0 ? messages|last.id : 0 }};

            // Scroll to latest message on open
            const contactModal = document.getElementById('contactModal');
            contactModal.addEventListener('shown.bs.modal', function () {
                discussionContainer.scrollTop = discussionContainer.scrollHeight;
            });

            // AJAX form submission
            if (form) {
                form.addEventListener('submit', function (e) {
                    e.preventDefault();

                    fetch("{{ path('app_discussion_send', {'id': plannification.idPlannification}) }}", {
                        method: 'POST',
                        body: new FormData(form)
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                const alignment = data.sender === {{ app.user.id }} ? 'ms-auto bg-primary text-white' : 'me-auto bg-light';
                                const messageHtml = `
                        <div class="card mb-2 ${alignment}" style="max-width: 80%;">
                            <div class="card-body p-2">
                                <p class="card-text mb-0">${data.content}</p>
                                <small class="text-muted">${data.createdAt}</small>
                            </div>
                        </div>`;
                                discussionContainer.insertAdjacentHTML('beforeend', messageHtml);
                                form.reset();
                                discussionContainer.scrollTop = discussionContainer.scrollHeight;
                                lastMessageId = data.id;
                            }
                        });
                });
            }

            // Polling new messages every 5 seconds
            let pollInterval;
            contactModal.addEventListener('shown.bs.modal', function () {
                pollInterval = setInterval(() => {
                    fetch("{{ path('app_discussion_get', {'id': plannification.idPlannification}) }}")
                        .then(response => response.json())
                        .then(data => {
                            const newMessages = data.filter(msg => msg.id > lastMessageId);
                            if (newMessages.length > 0) {
                                newMessages.forEach(msg => {
                                    const alignment = msg.sender === {{ app.user.id }} ? 'ms-auto bg-primary text-white' : 'me-auto bg-light';
                                    const messageHtml = `
                                <div class="card mb-2 ${alignment}" style="max-width: 80%;">
                                    <div class="card-body p-2">
                                        <p class="card-text mb-0">${msg.content}</p>
                                        <small class="text-muted">${msg.createdAt}</small>
                                    </div>
                                </div>`;
                                    discussionContainer.insertAdjacentHTML('beforeend', messageHtml);
                                });
                                discussionContainer.scrollTop = discussionContainer.scrollHeight;
                                lastMessageId = data[data.length - 1].id;
                            }
                        });
                }, 5000);
            });

            contactModal.addEventListener('hidden.bs.modal', function () {
                clearInterval(pollInterval);
            });
        });
    </script>
{% endblock %}
