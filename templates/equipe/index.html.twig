{% extends 'base_backOffice.html.twig' %}

{% block title %}Equipes{% endblock %}
{% block breadcrumb %}Equipes{% endblock %}

{% block stylesheets %}
  {{ parent() }}
  <style>
    .card {
      border-radius: 12px;
      box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.14), 
                  0 7px 10px -5px rgba(0, 0, 0, 0.4);
    }
    .avatar-sm {
      width: 36px;
      height: 36px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .loading-spinner {
      display: none;
      text-align: center;
      padding: 20px;
    }
    /* Styles pour la barre de recherche */
    .input-group.input-group-outline {
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      transition: all 0.3s ease;
    }
    .input-group.input-group-outline:focus-within {
      box-shadow: 0 4px 10px rgba(0,0,0,0.15);
    }
    #searchTeamInput {
      border: none;
      background: transparent;
      padding: 10px 15px;
      width: 300px;
    }
    #searchTeamInput:focus {
      outline: none;
      box-shadow: none;
    }
    #searchTeamButton {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
    .search-clear {
      cursor: pointer;
      position: absolute;
      right: 50px;
      top: 10px;
      color: #6c757d;
    }
    .rating-badge {
      min-width: 60px;
      display: inline-block;
    }
  </style>
{% endblock %}

{% block body %}
  <div class="row">
    <div class="col-12">
      <div class="card my-4">
        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
          <div class="bg-gradient-dark shadow-dark border-radius-lg pt-4 pb-3 d-flex justify-content-between align-items-center">
            <h6 class="text-white text-capitalize ps-3">Equipes</h6>
           {% if is_granted('ROLE_ADMIN') %}
    <a href="{{ path('app_equipe_new') }}" class="btn btn-sm btn-light me-3">
        <i class="material-symbols-rounded me-1">group_add</i>
    </a>
{% endif %}
  
          </div>
        </div>
        <div class="card-body px-4 pb-2">
          <!-- Barre de recherche -->
          <div class="row mb-3">
            <div class="col-md-6 position-relative">
              <div class="input-group input-group-outline">
                <input type="text" id="searchTeamInput" class="form-control" 
                       placeholder="Rechercher par nom d'équipe..."
                       value="{{ app.request.query.get('search') }}">
                <span class="search-clear" id="clearTeamSearch" style="display: none;">
                  <i class="material-symbols-rounded">close</i>
                </span>
                <button class="btn btn-outline-primary" type="button" id="searchTeamButton">
                  <i class="material-symbols-rounded">search</i>
                </button>
              </div>
            </div>
          </div>

          <!-- Contenu dynamique -->
          <div class="tab-content pt-3">
            <div class="loading-spinner" id="teamSpinner">
              <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
              </div>
            </div>
            <div id="teamDynamicContent">
              {{ include('equipe/_team_table.html.twig', { 
                'equipes': equipes,
                'currentPage': app.request.query.get('page', 1),
                'totalPages': totalPages
              }) }}
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Variables globales
      let currentPage = 1;
      let currentLimit = 4;
      let searchTimeout;

      // Initialisation
      setupTeamSearch();

      // Configuration de la recherche
      function setupTeamSearch() {
        const searchInput = document.getElementById('searchTeamInput');
        const searchButton = document.getElementById('searchTeamButton');
        const clearSearch = document.getElementById('clearTeamSearch');
        
        // Afficher/masquer le bouton de suppression
        searchInput.addEventListener('input', function() {
          clearSearch.style.display = this.value ? 'block' : 'none';
        });
        
        // Effacer la recherche
        clearSearch.addEventListener('click', function() {
          searchInput.value = '';
          this.style.display = 'none';
          loadTeamTable(1);
        });
        
        // Recherche au clic
        searchButton.addEventListener('click', performTeamSearch);
        
        // Recherche en temps réel avec debounce
        searchInput.addEventListener('input', function() {
          clearTimeout(searchTimeout);
          searchTimeout = setTimeout(performTeamSearch, 500);
        });
        
        // Recherche avec Entrée
        searchInput.addEventListener('keypress', function(e) {
          if (e.key === 'Enter') performTeamSearch();
        });
        
        function performTeamSearch() {
          const searchTerm = searchInput.value.trim();
          loadTeamTable(1, searchTerm);
        }
      }

      // Chargement des équipes
      async function loadTeamTable(page, searchTerm = '') {
        const contentDiv = document.getElementById('teamDynamicContent');
        const spinner = document.getElementById('teamSpinner');

        contentDiv.style.display = 'none';
        spinner.style.display = 'block';

        try {
          let url = `/equipe/table?page=${page}&limit=${currentLimit}`;
          if (searchTerm) {
            url += `&search=${encodeURIComponent(searchTerm)}`;
          }
          
          const response = await fetch(url);
          if(!response.ok) throw new Error('Erreur réseau');
          
          contentDiv.innerHTML = await response.text();
          attachTeamPaginationHandlers();
        } catch (error) {
          contentDiv.innerHTML = '<div class="alert alert-danger">Erreur de chargement</div>';
          console.error('Erreur:', error);
        } finally {
          spinner.style.display = 'none';
          contentDiv.style.display = 'block';
        }
      }

      // Gestion de la pagination
      function attachTeamPaginationHandlers() {
        document.querySelectorAll('.pagination a[data-page]').forEach(link => {
          link.addEventListener('click', function(e) {
            e.preventDefault();
            currentPage = parseInt(this.dataset.page);
            loadTeamTable(currentPage, document.getElementById('searchTeamInput').value.trim());
          });
        });
      }
    });
  </script>
{% endblock %}