{% extends 'base_backOffice.html.twig' %}

{% block title %}Modifier Utilisateur{% endblock %}
{% block stylesheets %}
  {{ parent() }}
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/intl-tel-input@18.2.1/build/css/intlTelInput.css">
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
  <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
  <style>
    .form-group { margin-bottom: 1.5rem; }
    .form-control { 
        border-radius: 8px; 
        padding: 10px 15px; 
        border: 1px solid #d2d6da;
        transition: all 0.3s;
    }
    .is-invalid { border-color: #dc3545 !important; }
    .invalid-feedback { color: #dc3545; font-size: 0.875em; }
    #map { height: 300px; border-radius: 8px; }
    .input-group-text { cursor: pointer; }
  </style>
{% endblock %} {# ← Manquant ! #}

{% block body %}
<div class="container-fluid py-4">
  <div class="row">
    <div class="col-12">
      <div class="card my-4">
        <div class="card-header p-0 mt-n4 mx-3 z-index-2">
          <div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3">
            <h6 class="text-white ps-3">
              <i class="material-symbols-rounded me-2">person</i>
              Modifier l'utilisateur
            </h6>
          </div>
        </div>
        <div class="card-body px-4 pb-2">
          {% for message in app.flashes('success') %}
            <div class="alert alert-success alert-dismissible fade show">
              {{ message }}
              <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
          {% endfor %}
          
          {% if form.vars.submitted and not form.vars.valid %}
            <div class="alert alert-danger alert-dismissible fade show">
              <ul class="mb-0">
                {% for error in form.vars.errors %}
                  <li>{{ error.message }}</li>
                {% endfor %}
              </ul>
              <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
          {% endif %}

          {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

          <div class="modal fade" id="mapModal">
            <div class="modal-dialog modal-lg">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title">Sélection d'adresse</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                  <div id="map"></div>
                  <button type="button" id="locate-me" class="btn btn-primary mt-2">
                    <i class="material-symbols-rounded me-2">my_location</i>
                    Ma position
                  </button>
                </div>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                {{ form_label(form.nom) }}
                {{ form_widget(form.nom) }}
                <div class="invalid-feedback">{{ form_errors(form.nom) }}</div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-group">
                {{ form_label(form.prenom) }}
                {{ form_widget(form.prenom) }}
                <div class="invalid-feedback">{{ form_errors(form.prenom) }}</div>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                {{ form_label(form.email) }}
                {{ form_widget(form.email) }}
                <div class="invalid-feedback">{{ form_errors(form.email) }}</div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-group">
                {{ form_label(form.telephone) }}
                <div class="input-group">
                  {{ form_widget(form.telephone) }}
                </div>
              </div>
            </div>
          </div>

          <div class="form-group">
            {{ form_label(form.adresse) }}
            <div class="input-group">
              {{ form_widget(form.adresse, {'attr': {
                'readonly': 'readonly',
                'data-bs-toggle': 'modal',
                'data-bs-target': '#mapModal'
              }}) }}
              <span class="input-group-text" data-bs-toggle="modal" data-bs-target="#mapModal">
                <i class="material-symbols-rounded">map</i>
              </span>
            </div>
            <div class="invalid-feedback">{{ form_errors(form.adresse) }}</div>
          </div>

          <div class="form-group">
            {{ form_label(form.role) }}
            {{ form_widget(form.role) }}
          </div>

          <div id="artisan-fields" style="display: none;">
            {% if form.specialiteArtisan is defined %}
              <div class="form-group">
                {{ form_row(form.specialiteArtisan) }}
              </div>
              <div class="form-group">
                {{ form_row(form.salaireHeureArtisan) }}
              </div>
            {% endif %}
          </div>

          <div id="constructeur-fields" style="display: none;">
            {% if form.specialiteConstructeur is defined %}
              <div class="form-group">
                {{ form_row(form.specialiteConstructeur) }}
              </div>
              <div class="form-group">
                {{ form_row(form.salaireHeureConstructeur) }}
              </div>
            {% endif %}
          </div>

          <div class="btn-action-group">
            <button type="submit" class="btn btn-success">
              <i class="material-symbols-rounded me-1">save</i> Mettre à jour
            </button>
            <a href="{{ path('app_user_edit', {'id': user.id}) }}" class="btn btn-outline-secondary">
              <i class="material-symbols-rounded me-1">arrow_back</i> Retour
            </a>
          </div>

          {{ form_end(form) }}
        </div>
      </div>
    </div>
  </div>
</div>
{% endblock %}
{% block javascripts %}
{{ parent() }}
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>
<script src="https://cdn.jsdelivr.net/npm/intl-tel-input@18.2.1/build/js/intlTelInput.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const role = document.getElementById('utilisateur_role');
    const artisanFields = document.getElementById('artisan-fields');
    const constructeurFields = document.getElementById('constructeur-fields');

    function updateFieldsVisibility() {
        const selectedRole = role.value;
        const isArtisan = selectedRole === 'Artisan';
        const isConstructor = selectedRole === 'Constructeur';

        artisanFields.style.display = isArtisan ? 'block' : 'none';
        constructeurFields.style.display = isConstructor ? 'block' : 'none';

        // Gérer les attributs requis
        if (document.getElementById('{{ form.specialiteArtisan.vars.id }}')) {
            document.getElementById('{{ form.specialiteArtisan.vars.id }}').required = isArtisan;
            document.getElementById('{{ form.salaireHeureArtisan.vars.id }}').required = isArtisan;
        }
        if (document.getElementById('{{ form.specialiteConstructeur.vars.id }}')) {
            document.getElementById('{{ form.specialiteConstructeur.vars.id }}').required = isConstructor;
            document.getElementById('{{ form.salaireHeureConstructeur.vars.id }}').required = isConstructor;
        }
    }

    role.addEventListener('change', updateFieldsVisibility);
    updateFieldsVisibility();

    // --- Initialisation Carte ---
    let map, marker;
    let mapInitialized = false;

    function initMap() {
        if (mapInitialized) return;

        const defaultLatLng = [33.8869, 9.5375]; // Tunisie

        map = L.map('map').setView(defaultLatLng, 6);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

        marker = L.marker(defaultLatLng, { draggable: true }).addTo(map);

        const geocoder = L.Control.geocoder({
            defaultMarkGeocode: false,
            position: 'topleft',
            placeholder: 'Rechercher un lieu...'
        }).addTo(map);

        geocoder.on('markgeocode', e => {
            const latlng = e.geocode.center;
            marker.setLatLng(latlng);
            map.setView(latlng, 16);
            updateAddress(latlng.lat, latlng.lng);
        });

        map.on('click', e => {
            marker.setLatLng(e.latlng);
            updateAddress(e.latlng.lat, e.latlng.lng);
        });

        marker.on('dragend', () => {
            const pos = marker.getLatLng();
            updateAddress(pos.lat, pos.lng);
        });

        document.getElementById('locate-me').addEventListener('click', () => {
            map.locate({ setView: true, maxZoom: 16 });
        });

      map.on('locationfound', e => {
    const latlng = e.latlng;
    marker.setLatLng(latlng);
    map.setView(latlng, 16);
    updateAddress(latlng.lat, latlng.lng); // ← MET À JOUR LE CHAMP ADRESSE !
});


        mapInitialized = true;
    }

    function updateAddress(lat, lng) {
        fetch(`https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`)
            .then(res => res.json())
            .then(data => {
                const adresse = data.display_name || '';
                document.getElementById('utilisateur_adresse').value = adresse;
            });
    }

    // Afficher la carte au moment où le modal s'affiche
    const mapModal = document.getElementById('mapModal');
    mapModal.addEventListener('shown.bs.modal', function () {
        initMap();
        setTimeout(() => {
            map.invalidateSize();
            map.setView(marker.getLatLng(), 16);
        }, 200);
    });

    // --- intl-tel-input ---
    const phoneInput = document.querySelector('#utilisateur_telephone');
    if (phoneInput) {
        window.intlTelInput(phoneInput, {
            initialCountry: "tn",
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js"
        });
    }

    // --- Validation en temps réel ---
    document.querySelectorAll('.form-control').forEach(input => {
        input.addEventListener('input', function () {
            this.classList.toggle('is-invalid', !this.checkValidity());
        });
    });
});
</script>
{% endblock %}
