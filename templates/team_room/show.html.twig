{# templates/team_room/show.html.twig #}
{% extends 'base_backOffice.html.twig' %}

{% block title %}Salon {{ room.name }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .chat-container {
            height: 500px;
            border: 1px solid #dee2e6;
            border-radius: 12px;
            background: linear-gradient(to bottom right, #f8f9fa, #e9ecef);
            display: flex;
            flex-direction: column;
        }

        .chat-scroll-area {
            overflow-y: auto;
            padding: 20px;
            flex-grow: 1;
            scroll-behavior: smooth;
        }

        .message {
            padding: 12px 18px;
            border-radius: 20px;
            max-width: 75%;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
        }

        .message-sent {
            background-color: #d1e7dd;
            color: #0f5132;
        }

        .message-received {
            background-color: #fff3cd;
            border: 1px solid #ffeeba;
            color: #664d03;
        }

        .jitsi-notification {
            background-color: #e9f5ff;
            border-left: 3px solid #0d6efd;
            padding: 10px 15px;
            margin: 10px 0;
            border-radius: 5px;
            text-align: center;
        }

        .video-icon {
            color: #0d6efd;
            margin-right: 8px;
        }

        #jitsiContainer {
            border: 1px solid #dee2e6;
            border-radius: 10px;
            padding: 15px;
            background-color: #f8f9fa;
            margin-bottom: 20px;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src='https://meet.jit.si/external_api.js'></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Configuration Jitsi
            const startMeetingBtn = document.getElementById('startMeetingBtn');
            const closeMeetingBtn = document.getElementById('closeMeetingBtn');
            const jitsiContainer = document.getElementById('jitsiContainer');
            let api = null;

            if (startMeetingBtn) {
                startMeetingBtn.addEventListener('click', function() {
                    const roomName = `team-{{ room.equipe.nom }}-{{ room.id }}-${Date.now()}`;
                    
                    // Afficher le container Jitsi
                    jitsiContainer.style.display = 'block';
                    
                    // Envoyer la notification
                    sendJoinNotification(
                        '{{ room.id }}', 
                        '{{ app.user.getFullName() }}', 
                        '{{ room.equipe.nom }}'
                    );

                    // Initialiser Jitsi Meet
                    api = new JitsiMeetExternalAPI("meet.jit.si", {
                        roomName: roomName,
                        width: '100%',
                        height: 400,
                        parentNode: document.querySelector('#jitsi-meet'),
                        userInfo: {
                            displayName: '{{ app.user.getFullName() }}',
                            email: '{{ app.user.email }}'
                        },
                        interfaceConfigOverwrite: {
                            SHOW_JITSI_WATERMARK: false,
                            SHOW_WATERMARK_FOR_GUESTS: false
                        }
                    });

                    // Cacher le bouton de d√©marrage
                    startMeetingBtn.style.display = 'none';
                });
            }

            if (closeMeetingBtn) {
                closeMeetingBtn.addEventListener('click', function() {
                    if (api) {
                        api.dispose();
                        api = null;
                    }
                    jitsiContainer.style.display = 'none';
                    startMeetingBtn.style.display = 'block';
                });
            }

            function sendJoinNotification(roomId, userName, teamName) {
                fetch('{{ path('jitsi_join_notification') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({
                        roomId: roomId,
                        userName: userName,
                        teamName: teamName
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.notification) {
                        // Ajouter visuellement dans le chat
                        addJitsiNotificationToChat(data.notification);
                        
                        // Ajouter √† la navbar
                        if (typeof window.addJitsiNotificationToNavbar === 'function') {
                            window.addJitsiNotificationToNavbar(data.notification);
                        }
                    }
                })
                .catch(error => {
                    console.error('Error sending notification:', error);
                });
            }

            function addJitsiNotificationToChat(notification) {
                const chatArea = document.querySelector('.chat-scroll-area');
                if (!chatArea) return;

                const notificationDiv = document.createElement('div');
                notificationDiv.className = 'jitsi-notification';
                notificationDiv.innerHTML = `
                    <i class="fas fa-video video-icon"></i>
                    <strong>${notification.sender}</strong> ${notification.content}
                    <small class="text-muted ms-2">${notification.time}</small>
                `;

                chatArea.appendChild(notificationDiv);
                chatArea.scrollTop = chatArea.scrollHeight;
            }
        });

        // Fonction globale pour la navbar (doit √™tre dans base.html.twig)
        window.addJitsiNotificationToNavbar = function(notification) {
            const navbarMessagerie = document.getElementById('navbar-messagerie');
            if (!navbarMessagerie) return;

            const notifItem = document.createElement('a');
            notifItem.href = `/team-room/${notification.roomId}`;
            notifItem.className = 'dropdown-item py-2 border-bottom jitsi-notification-item';
            
            notifItem.innerHTML = `
                <div class="d-flex align-items-center">
                    <i class="fas fa-video video-icon me-2"></i>
                    <div class="flex-grow-1">
                        <div class="fw-bold small">${notification.sender}</div>
                        <div class="small">${notification.content}</div>
                    </div>
                    <small class="text-muted ms-2">${notification.time}</small>
                </div>
            `;

            // Ajouter en haut de la liste
            navbarMessagerie.insertBefore(notifItem, navbarMessagerie.firstChild);

            // Mettre √† jour le compteur de notifications
            const counter = document.getElementById('notification-counter');
            if (counter) {
                const currentCount = parseInt(counter.textContent) || 0;
                counter.textContent = currentCount + 1;
                counter.classList.remove('d-none');
            }
        };
    </script>
{% endblock %}

{% block body %}
<div class="container mt-3">
    <div class="row">
        <div class="col-md-8">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <span class="badge bg-secondary fs-6">üë• √âquipe : {{ room.equipe.nom }}</span>
                {% if isMember %}
                    <button id="startMeetingBtn" class="btn btn-success btn-sm">
                        <i class="fas fa-video me-1"></i> D√©marrer une visio
                    </button>
                {% endif %}
            </div>

            <div id="jitsiContainer" style="display: none;">
                <div id="jitsi-meet" style="height: 400px; border-radius: 10px; overflow: hidden;"></div>
                <div class="text-end mt-2">
                    <button id="closeMeetingBtn" class="btn btn-danger btn-sm">
                        <i class="fas fa-times me-1"></i> Fermer la visio
                    </button>
                </div>
            </div>

            {% if not isMember %}
                <div class="alert alert-info text-center shadow-sm">
                    <h5 class="mb-3">üëã Bienvenue dans ce salon !</h5>
                    <p class="mb-3">Vous n'√™tes pas encore membre. Cliquez ci-dessous pour rejoindre et discuter avec votre √©quipe.</p>
                    <a href="{{ path('app_team_room_join', {'id': room.id}) }}" class="btn btn-success px-4">
                        ü§ù Rejoindre le salon
                    </a>
                </div>
            {% else %}
                <div class="chat-container mb-4">
                    <div class="chat-scroll-area">
                        {% for message in messages %}
                            <div class="d-flex {% if message.sender == app.user %}justify-content-end{% else %}justify-content-start{% endif %} mb-3">
                                <div class="message {% if message.sender == app.user %}message-sent{% else %}message-received{% endif %}">
                                    <div class="message-header mb-1">
                                        <strong>{{ message.sender.getFullName() }}</strong>
                                        <small class="text-muted">{{ message.sentAt|date('H:i') }}</small>
                                    </div>
                                    <div class="message-content">
                                        {{ message.content }}
                                    </div>
                                </div>
                            </div>
                        {% else %}
                            <div class="alert alert-light text-center">Aucun message n'a encore √©t√© √©chang√©.</div>
                        {% endfor %}
                    </div>
                </div>

                <form method="post" action="{{ path('app_team_room_message', {'id': room.id}) }}" class="mt-3">
                    <div class="input-group shadow-sm">
                        <input type="text" name="content" class="form-control rounded-start-pill" placeholder="√âcrivez un message..." required>
                        <button type="submit" class="btn btn-primary rounded-end-pill px-4">Envoyer</button>
                    </div>
                </form>
            {% endif %}
        </div>

        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white fw-bold">
                    üë§ Membres ({{ room.members|length }})
                </div>
                <ul class="list-group list-group-flush">
                    {% for member in room.members %}
                    <li class="list-group-item {% if not member.isActive %}text-muted{% endif %}">
                        <div class="d-flex justify-content-between align-items-center">
                            <span>
                                {{ member.user.getFullName() }}
                                {% if member.user == app.user %}<small class="text-success">(vous)</small>{% endif %}
                            </span>
                            <small class="text-muted">{{ member.joinedAt|date('d/m/Y') }}</small>
                        </div>
                    </li>
                    {% endfor %}
                </ul>
            </div>
        </div>
    </div>
</div>
{% endblock %}