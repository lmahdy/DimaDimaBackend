# config/services.yaml


# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration

parameters:
    photos_directory: '%kernel.project_dir%/public/uploads/photos'
    uploads_directory: '%kernel.project_dir%/public/uploads'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            string $googleClientId: '%env(GOOGLE_CLIENT_ID)%'
            string $googleClientSecret: '%env(GOOGLE_CLIENT_SECRET)%'
            string $googleRedirectUri: '%env(GOOGLE_REDIRECT_URI)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Security/GoogleAuthenticator.php' # Exclure car configur√© manuellement

    # Configuration explicite pour GoogleAuthenticator
    App\Security\GoogleAuthenticator:
        arguments:
            $router: '@router'
            $entityManager: '@doctrine.orm.entity_manager'
            $passwordHasher: '@security.user_password_hasher'
            $loginSuccessHandler: '@App\Security\LoginSuccessHandler'


    # Configuration pour les handlers
    App\Security\LoginSuccessHandler: ~
    App\Security\LoginFailureHandler:
        arguments:
            $router: '@router'

    # Explicitly make HttpClientInterface available
    Symfony\Contracts\HttpClient\HttpClientInterface: '@http_client'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Security\CustomUserProvider:
        arguments:
            $connection: '@doctrine.dbal.default_connection'

    App\Repository\CustomReclamationRepository:
        arguments:
            $connection: '@doctrine.dbal.default_connection'

    App\Repository\CustomUtilisateurRepository:
        arguments:
            $connection: '@doctrine.dbal.default_connection'
            $passwordHasher: '@security.user_password_hasher'
            
    App\Service\GeminiApiService:
        arguments:
            $apiKey: '%env(GEMINI_API_KEY)%'

